{"version":3,"file":"static/js/496.9a3a45a2.chunk.js","mappings":"iRAOA,MAwFA,EAxFoBA,IASb,IATc,MAChBC,EAAK,QACLC,EAAO,KACPC,EAAI,iBACJC,EAAgB,WAChBC,GAAa,EAAK,WAClBC,GAAa,EAAI,eACjBC,EAAc,sBACdC,EAAwB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,MAChDR,EACG,MAAOS,EAAaC,IAAkBC,EAAAA,EAAAA,UAASJ,GAM/C,OACIK,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,UACLF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACAF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAG,KAAIH,UACRF,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,UACLI,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAL,SAAA,EACDI,EAAAA,EAAAA,MAACE,EAAAA,EAAU,CAACC,UAAU,gBAAeP,SAAA,EACjCF,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAACC,IAAI,KAAIT,SAAEb,KACrBW,EAAAA,EAAAA,KAAA,OAAKS,UAAU,sBAAqBP,UAChCI,EAAAA,EAAAA,MAACM,EAAAA,EAAM,CAACH,UAAU,OAAOI,MAAM,UAASX,SAAA,EACpCF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAM,MACZf,EAAAA,EAAAA,KAAA,QAAMS,UAAU,qBAAoBP,SAAC,wBAIjDI,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAACM,UAAU,kBAAiBP,SAAA,CAC3BT,IACGO,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAG,IAAGH,UACPI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,4BAA2BP,SAAA,EACtCF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,IAAI,iBAAgBf,SAAC,UAC5BF,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACFT,UAAU,mBACVU,KAAK,SACLC,GAAG,iBACHC,MAAO7B,EAAiB8B,eACxBC,SAAWC,GAAMhC,EAAiBiC,oBAAoBD,EAAEE,OAAOL,OAAOnB,SAErEN,EAAsB+B,KAAIC,IACvB5B,EAAAA,EAAAA,KAAA,UAAqBqB,MAAOO,EAAO1B,SAAE0B,GAAxBA,QAGrB5B,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,IAAI,iBAAgBf,SAAC,iBAIvCR,IACGY,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CAACK,UAAU,gEAAgEJ,GAAG,IAAGH,SAAA,EACjFF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACP,UAAU,OAAOQ,IAAI,eAAcf,SAAC,YAG3CF,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACFT,UAAU,mBACVU,KAAK,OACLU,OAAO,KACPT,GAAG,eACHC,MAAOxB,EACP0B,SAlDnBC,IACjB1B,EAAe0B,EAAEE,OAAOL,MAAM,WAsDVrB,EAAAA,EAAAA,KAAA,OAAKS,UAAU,kBAAiBP,UAC5BF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,CACNC,UAAQ,EACRC,UAAQ,EACRvC,WAAYA,EACZwC,oBAAqBA,KAAMA,EAAAA,EAAAA,IAAoBzC,GAC/C0C,kBAAgB,EAChBzB,UAAU,kBACVnB,QAASA,EACT6C,UAAUnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACrB,KAAM,KAC7BxB,KAAMA,gBAOtB,C","sources":["components/CustomTable.jsx"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Button, Card, CardHeader, CardTitle, Col, Input, Label, Row} from \"reactstrap\";\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { ChevronDown, Plus} from \"react-feather\";\nimport DataTable from 'react-data-table-component';\nimport { paginationComponent } from \"../helpers/paginationHelper\";\n\nconst CustomTable = ({\n     title,\n     columns, \n     data,\n     paginationObject,\n     pagination = false, \n     searchable = true,\n     searchedValues,\n     entriesPerPageOptions = [5, 10, 25, 50, 75, 100] \n}) => {\n    const [searchValue, setSearchValue] = useState(searchedValues);\n\n    const handleSearch = e => {\n        setSearchValue(e.target.value);\n    }\n\n    return (\n        <Fragment>\n            <Row>\n                <Col sm='12'>\n                    <Fragment>\n                        <Card>\n                            <CardHeader className='border-bottom'>\n                                <CardTitle tag='h4'>{title}</CardTitle>\n                                <div className='d-flex mt-md-0 mt-1'>\n                                    <Button className='ms-2' color='primary'>\n                                        <Plus size={15} />\n                                        <span className='align-middle ms-50'>Add Record</span>\n                                    </Button>\n                                </div>\n                            </CardHeader>\n                            <Row className='mx-0 mt-1 mb-50'>\n                                {pagination && (\n                                    <Col sm='6'>\n                                        <div className='d-flex align-items-center'>\n                                            <Label for='entries-select'>Show</Label>\n                                            <Input\n                                                className='dataTable-select'\n                                                type='select'\n                                                id='entries-select'\n                                                value={paginationObject.currentPerPage}\n                                                onChange={(e) => paginationObject.handlePerPageChange(e.target.value)}\n                                            >\n                                                {entriesPerPageOptions.map(option => (\n                                                    <option key={option} value={option}>{option}</option>\n                                                ))}\n                                            </Input>\n                                            <Label for='entries-select'>entries</Label>\n                                        </div>\n                                    </Col>\n                                )}\n                                {searchable && (\n                                    <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\n                                        <Label className='me-1' for='search-input'>\n                                            Search\n                                        </Label>\n                                        <Input\n                                            className='dataTable-filter'\n                                            type='text'\n                                            bsSize='sm'\n                                            id='search-input'\n                                            value={searchValue}\n                                            onChange={handleSearch}\n                                        />\n                                    </Col>\n                                )}\n                            </Row>\n                            <div className='react-dataTable'>\n                                <DataTable\n                                    bordered\n                                    noHeader\n                                    pagination={pagination}\n                                    paginationComponent={() => paginationComponent(paginationObject)}\n                                    paginationServer\n                                    className='react-dataTable'\n                                    columns={columns}\n                                    sortIcon={<ChevronDown size={10} />}\n                                    data={data}\n                                />\n                            </div>\n                        </Card>\n                    </Fragment>\n                </Col>\n            </Row>\n        </Fragment >\n    );\n}\n\nexport default CustomTable;\n"],"names":["_ref","title","columns","data","paginationObject","pagination","searchable","searchedValues","entriesPerPageOptions","searchValue","setSearchValue","useState","_jsx","Fragment","children","Row","Col","sm","_jsxs","Card","CardHeader","className","CardTitle","tag","Button","color","Plus","size","Label","for","Input","type","id","value","currentPerPage","onChange","e","handlePerPageChange","target","map","option","bsSize","DataTable","bordered","noHeader","paginationComponent","paginationServer","sortIcon","ChevronDown"],"sourceRoot":""}