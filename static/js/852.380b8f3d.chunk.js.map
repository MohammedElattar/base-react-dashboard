{"version":3,"file":"static/js/852.380b8f3d.chunk.js","mappings":"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","sources":["helpers/paginationHelper.js","helpers/routeHelper.js","modules/category/hooks/useCategoryLogic.js","modules/category/containers/CategoryContainer.jsx"],"sourcesContent":["import { lazy } from \"react\"\n\nconst Pagination = lazy(() => import('../components/PaginationComponent'))\nimport { getUniqueParams } from \"./routeHelper\";\n\nexport const paginationComponent = (args) => {\n    return <Pagination {...args} />\n}\n\nexport function getValidPageNumber(page) {\n    page = Number.parseInt(page);\n    if (!Number.isInteger(page) || page < 1) {\n        page = 1;\n    }\n    return page;\n}\n\nexport function getValidPerPage(perPage) {\n    perPage = Number.parseInt(perPage);\n    if (!Number.isInteger(perPage) || (perPage < 5 || perPage > 100)) {\n        perPage = 5;\n    }\n    return perPage;\n}\n\nexport function getCurrentPage() {\n    const { page } = getUniqueParams(); // Assuming you have defined a 'page' parameter in your route\n    return getValidPageNumber(page);\n}\n\nexport function getPerPage() {\n    const { perPage } = getUniqueParams(); // Assuming you have defined a 'perPage' parameter in your route\n    return getValidPerPage(perPage);\n}\n\nexport function getNextPageNumber() {\n    let currentPage = getCurrentPage();\n    return ++currentPage;\n}\n\nexport function getPreviousPageNumber() {\n    let currentPage = getCurrentPage();\n    if (currentPage <= 1) {\n        return 1;\n    }\n    return --currentPage;\n}\n\nexport function updatePaginationParams(page, perPage) {\n    const updatedParams = new URLSearchParams(window.location.search);\n    updatedParams.set('page', getValidPageNumber(page).toString());\n    updatedParams.set('per_page', getValidPerPage(perPage).toString());\n    const newUrl = `${window.location.pathname}?${updatedParams.toString()}`;\n    window.history.pushState({ path: newUrl }, '', newUrl);\n}\n\n\nexport function generatePaginationParams(page, perPage) {\n    page = getCurrentPage()\n    perPage = getPerPage()\n\n    return {page, per_page: perPage}\n}","export const parseRoute = (url = '', bindings = {}) => {\n    let routePath = url;\n    for (const [key, value] of Object.entries(bindings)) {\n        routePath = routePath.replace(`:${key}`, value);\n    }\n\n    return routePath;\n}\n\n\nexport function getUniqueParams() {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    const uniqueParams = new Set();\n    \n    urlParams.forEach((value, key) => {\n        uniqueParams.add(key);\n    });\n    \n    const uniqueParamsArray = Array.from(uniqueParams);\n\n    const uniqueUrlParams = new URLSearchParams();\n\n    uniqueParamsArray.forEach((item) => uniqueUrlParams.append(item, urlParams.get(item)));\n\n    return uniqueUrlParams;\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport axiosInstance from '../../../api/axiosInstance'\nimport { setAllCategoriesAction, setAllCategoriesLoading, setAllCategoriesMetaAction } from \"../redux\";\nimport { getUniqueParams } from \"../../../helpers/routeHelper\";\n\nconst useCategoryLogic = () => {\n    const dispatch = useDispatch();\n    const selector = useSelector(state => state.categoryReducer),\n        allCategories = selector.all.data,\n        allCategoriesLoading = selector.all.loading,\n        allCategoriesMeta = selector.all.meta;\n\n    const getAllCategoriesLogic = (params = {}) => {\n        params = Object.keys(params).length === 0 ? getUniqueParams() : params;\n\n        dispatch(setAllCategoriesLoading(true))\n\n        axiosInstance.get('/admin/categories', { params }).then((response) => {\n            dispatch(setAllCategoriesAction(response.data.data))\n            dispatch(setAllCategoriesMetaAction(response.data.meta))\n        }).finally(() => {\n            dispatch(setAllCategoriesLoading(false))\n        })\n\n    }\n\n    return {\n        allCategories,\n        allCategoriesMeta,\n        allCategoriesLoading,\n        getAllCategoriesLogic\n    }\n}\n\nexport default useCategoryLogic;","import { lazy, useEffect, useState } from \"react\";\nimport useCategoryLogic from \"../hooks/useCategoryLogic\";\nimport { getValidPageNumber, getValidPerPage, updatePaginationParams } from \"../../../helpers/paginationHelper\";\n\nconst CategoryTable = lazy(() => import('../views/CategoryTable'));\n\nconst CategoryContainer = () => {\n    const { \n        allCategories, \n        getAllCategoriesLogic, \n        allCategoriesMeta,\n        allCategoriesLoading\n    } = useCategoryLogic();\n    const [currentPerPage, setCurrentPerPage] = useState(getValidPerPage())\n    const [currentPage, setCurrentPageState] = useState(getValidPageNumber())\n\n    useEffect(() => {\n        getAllCategoriesLogic()\n    }, [currentPage, currentPerPage])\n\n    const handlePageChange = (page) => {\n        setCurrentPageState(page)\n        updatePaginationParams(page, currentPerPage)\n    }\n\n    const handlePerPageChange = (perPage) => {\n        setCurrentPerPage(perPage)\n        updatePaginationParams(currentPage, perPage)\n        setCurrentPerPage(perPage)\n        // getAllCategoriesLogic()\n    }\n\n    const handleSearch = (value) => {\n        console.log(value)\n    }\n\n    return <CategoryTable\n        data={allCategories}\n        handleSearch={handleSearch}\n        allCategoriesLoading={allCategoriesLoading}\n        paginationObject={{ \n            meta: allCategoriesMeta, \n            currentPerPage, \n            currentPage,\n            handlePageChange, \n            handlePerPageChange,\n            setCurrentPageState\n        }}\n    />\n}\n\nexport default CategoryContainer;"],"names":["Pagination","lazy","paginationComponent","args","_jsx","getValidPageNumber","page","Number","parseInt","isInteger","getValidPerPage","perPage","updatePaginationParams","updatedParams","URLSearchParams","window","location","search","set","toString","newUrl","concat","pathname","history","pushState","path","parseRoute","bindings","arguments","length","undefined","routePath","key","value","Object","entries","replace","getUniqueParams","urlParams","uniqueParams","Set","forEach","add","uniqueParamsArray","Array","from","uniqueUrlParams","item","append","get","useCategoryLogic","dispatch","useDispatch","selector","useSelector","state","categoryReducer","allCategories","all","data","allCategoriesLoading","loading","allCategoriesMeta","meta","getAllCategoriesLogic","params","keys","setAllCategoriesLoading","axiosInstance","then","response","setAllCategoriesAction","setAllCategoriesMetaAction","finally","CategoryTable","CategoryContainer","currentPerPage","setCurrentPerPage","useState","currentPage","setCurrentPageState","useEffect","handleSearch","console","log","paginationObject","handlePageChange","handlePerPageChange"],"sourceRoot":""}